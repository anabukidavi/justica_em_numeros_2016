
========== Instruções preliminares ==========

A seguir, serão apresentados comandos que serão executados em um terminal.

Atentar ao parâmetro "SIGLA_REGIONAL", que deve ser substituído pelo dado correto (ex: TRT99)

Atentar ao nome do arquivo "JAR", que deverá corresponder ao baixado da página do CNJ (instruções
serão descritas a seguir) 

OBS: caso tenha problemas com proxy, adicionar os parâmetros abaixo ao final dos comandos sugeridos:
-Dhttp.proxyHost=HOST -Dhttp.proxyPort=PORTA -Dhttp.proxyUser=USUARIO -Dhttp.proxyPassword=SENHA

O arquivo "JAR" do cnj (replicacao-client) gera, na saída padrão, um grande número de informações.
Se necessário, direcione a saída dos comandos para um arquivo, adicionando, ao final da linha, 
o sufixo a seguir: "> arquivo_saida.txt"

Para maiores detalhes sobre o funcionamento do "replicacao-client", consultar o manual do CNJ,
disponível em "https://www.cnj.jus.br/owncloud/index.php/s/holkvSASTlwbeoe".



========== Instruções para validar arquivos XML gerados e enviar ao CNJ ==========


1. Baixar a versão mais recente do arquivo "replicacao-client-X.Y.Z.jar" a partir da página
   "https://www.cnj.jus.br/owncloud/index.php/s/e29uoq9fZgDyeX0" e salvar dentro da 
   pasta "lib/replicacaoNacional".

   
2. Iniciar um terminal (cmd.exe) e acessar a pasta raiz desse projeto (justica_em_numeros_2016).


3. Executar os comandos abaixo (conforme a instância desejada), para validar os arquivos XML
   INDIVIDUAIS que foram gerados para cada processo. Esse passo não é obrigatório, mas facilitará
   a identificação de problemas que podem ter ocorrido, pois o nome do arquivo com defeito será exibido.
   É recomendável executar o comando e autorizar a validação e conversão dos arquivos, mas NÃO
   CONVERTER E NEM ENVIAR os arquivos individuais ao CNJ! Substituir o token "SIGLA_REGIONAL", ex: "TRT0"
   
   # Comando para validar os XMLs individuais no 1o Grau
   ## Saída somente na tela
   java -jar lib\replicacaoNacional\replicacao-client-2.2.6.jar SIGLA_REGIONAL output\1g\xmls_individuais
   ## Saída em arquivo (facilita identificação de erros de validação, mas exige o monitoramento do arquivo em tempo real, por exemplo, com o comando 'tail')
   java -jar lib\replicacaoNacional\replicacao-client-2.2.6.jar SIGLA_REGIONAL output\1g\xmls_individuais >> output\log\replicacao-client-simulacao-1g.log

   # Comando para validar os XMLs individuais no 2o Grau
   ## Saída somente na tela
   java -jar lib\replicacaoNacional\replicacao-client-2.2.6.jar SIGLA_REGIONAL output\2g\xmls_individuais
   ## Saída em arquivo (facilita identificação de erros de validação, mas exige o monitoramento do arquivo em tempo real, por exemplo, com o comando 'tail')
   java -jar lib\replicacaoNacional\replicacao-client-2.2.6.jar SIGLA_REGIONAL output\2g\xmls_individuais >> output\log\replicacao-client-simulacao-2g.log
   

4. Executar o comando abaixo para validar e enviar os arquivos XML unificados (em lotes de 5000) ao CNJ.
   Substituir o token "SIGLA_REGIONAL", ex: "TRT0"

   # Comando para validar os XMLs unificados de ambas as instâncias (útil para enviar as remessas ao CNJ em lotes de 5000 processos)
   ## Saída somente na tela
   java -jar lib\replicacaoNacional\replicacao-client-2.2.6.jar SIGLA_REGIONAL output\xmls_unificados
   ## Saída em arquivo (facilita identificação de erros de validação, mas exige o monitoramento do arquivo em tempo real, por exemplo, com o comando 'tail')
   java -jar lib\replicacaoNacional\replicacao-client-2.2.6.jar SIGLA_REGIONAL output\xmls_unificados >> output\log\replicacao-client.log

